#DO NOT EDIT THIS FILE.  IT IS MAINTAINED THROUGH EROS.
#!/bin/bash
#Author: David Gitz
#Purpose: Launches Software

#declare -a Devices=("ControlModule1" "dgitzrosmaster" "ControlModule2" "ComputeModule1" "BuildServer1")

function launch_device()
{
    sudo chown -R robot /dev/ttyAMA0
    echo -ne "|\x$(printf %x 157)|\x$(printf %x 187)|\x$(printf %x 188)" > /dev/ttyAMA0
    echo -ne '|-BOOTING: '$(date) > /dev/ttyAMA0
    source /home/robot/catkin_ws/devel/setup.bash
    #touch ~/$1
    counter=0
	countmax=20 # Try for about 5 minutes
	ros_connected=0
    while [ $counter -lt $countmax ]
	do
        OUTPUT="$(/opt/ros/indigo/bin/rosnode list)"
        if [[ $OUTPUT = *[!\ ]* ]]; then
			let ros_connected=1
            break
        else
            sleep 5
        fi
        	let counter=$counter+1
		v=$countmax
		let v=$v-$counter
    	echo "Trying to contact ROS Server "$v" more times."
    	if [ $counter -eq $countmax ]; then
			echo "Unable to contact ROS Master."
		fi
    done
    boot_file="/home/robot/logs/output/"$1"_log.txt"
    echo "MY HOSTNAME:" $HOSTNAME >> $boot_file
    export ROS_HOSTNAME=$HOSTNAME
    export ROS_IP=$HOSTNAME
    export ROS_MASTER_URI=http://ControlModule1:11311
    echo "ROS_MASTER: "$ROS_MASTER_URI >> $boot_file
    echo "ROS HOSTNAME: "$ROS_HOSTNAME >> $boot_file
	if [ $ros_connected -eq 1 ]; then
		echo "Launching Device at: "$(date)
		echo "Launching Device at: "$(date) >> $boot_file
		var=$(find /home/robot/catkin_ws/src -iname $1.launch)
		if [ -z "$var" ]; then
			echo "No Launch File for: "$1
		else
                    	launch_command="roslaunch icarus_rover_v2 "$1"_AlwaysOn.launch &"
			eval $launch_command
			launch_command="roslaunch icarus_rover_v2 "$1".launch &"
			eval $launch_command
            
		fi
	fi
    echo -ne '|-STARTING: '$(date) > /dev/ttyAMA0
}
function print_usage()
{
    echo "Usage Instructions: launchDevice"
    echo "No Options: This Menu"
    echo "-?/-h This Menu"
    echo "-d <hostname> Launch device on this hostname.  Note: This program only works when ran locally."
    exit
}
if [ -z "$1" ]
then
   print_usage
   exit
fi
while getopts ":?hd:" options; do
    case $options in
        d) launch_device $OPTARG;;
        *) print_usage ;;
    esac
done

