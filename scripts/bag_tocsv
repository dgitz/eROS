#!/bin/bash
#DO NOT EDIT THIS FILE.  IT IS MAINTAINED THROUGH EROS.
#Author: David Gitz

function print_usage()
{
    echo "Usage Instructions: bag_tocsv"
    echo "No Options: This Menu"
    echo "-?/-h This Menu"
    echo "-m <mode> Convert bag files based on mode.  Supported Modes: pose."
    echo "-b <bag file> Bag File."
    echo "-o <Output Directory> Directory to store output csv files."
    exit
}
if [ -z "$1" ]
then
   print_usage
   exit
fi
function convert()
{
    bagname=$(basename $2)
    bagname=${bagname%.*}
    echo "Creating:"$3/$bagname
    mkdir "$3/$bagname"
    echo $bagname
    if [ "$1" = "pose" ]
    then
        echo "Converting Attitude"
        rostopic echo -b $2 -p /ComputeModule1_roscopter_node/attitude > "$3/$bagname/attitude.csv" &
        echo "Converting GPS"
        rostopic echo -b $2 -p /ComputeModule1_roscopter_node/gps   > "$3/$bagname/gps.csv" &
        echo "Converting Raw IMU"
        rostopic echo -b $2 -p /ComputeModule1_roscopter_node/raw_imu > "$3/$bagname/raw_imu.csv" &
        echo "Converting Nav State"
        rostopic echo -b $2 -p /ComputeModule1_roscopter_node/state  > "$3/$bagname/nav_state.csv" & 
        echo "Converting VFR HUD"
        rostopic echo -b $2 -p /ComputeModule1_roscopter_node/vfr_hud   > "$3/$bagname/vfr_hud.csv" &
        echo "Converting Joystick"
        rostopic echo -b $2 -p /DriverStation/joystick   > "$3/$bagname/joystick.csv" &
        echo "Converting Armed State"
        rostopic echo -b $2 -p /armed_state > "$3/$bagname/armed_state.csv" &
        echo "Converting pose"
        rostopic echo -b $2 -p /pose > "$3/$bagname/pose.csv" &
		rostopic echo -b $2 -p /sim/encoder > "$3/$bagname/sim_encoder.csv" &
		rostopic echo -b $2 -p /sim/pose > "$3/$bagname/sim_pose.csv" &
		rostopic echo -b $2 -p /sim/gps > "$3/$bagname/sim_gps.csv" &
		rostopic echo -b $2 -p /sim/imu > "$3/$bagname/sim_imu.csv" &
        rostopic echo -b $2 -p /IMU1 > "$3/$bagname/IMU1.csv" &
        rostopic echo -b $2 -p /IMU2 > "$3/$bagname/IMU2.csv" &
        wait
        echo "All Conversion Complete"
    fi

}
while getopts ":?hm:b:o:" options; do
    case $options in
        b) bagfile=${OPTARG} ;;
        m) mode=${OPTARG} ;;
        o) ouputdir=${OPTARG} ;;
        h) print_usage ;;
        ?) print_usage ;;
        *) print_usage ;;
    esac

    
done
convert $mode $bagfile $ouputdir

