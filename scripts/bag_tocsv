#!/bin/bash
#DO NOT EDIT THIS FILE.  IT IS MAINTAINED THROUGH EROS.
#Author: David Gitz

function print_usage()
{
    echo "Usage Instructions: bag_tocsv"
    echo "No Options: This Menu"
    echo "-?/-h This Menu"
    echo "-m <mode> Convert bag files based on mode.  Supported Modes: pose,resource,time."
    echo "-b <bag file> Bag File."
    echo "-o <Output Directory> Directory to store output csv files."
    exit
}
if [ -z "$1" ]
then
   print_usage
   exit
fi
function convert()
{
    bagname=$(basename $2)
    bagname=${bagname%.*}
    echo "Creating:"$3/$bagname
    #rm -r -f "$3/$bagname" >> /dev/null
    mkdir "$3/$bagname" >> /dev/null
    echo $bagname
    if [ "$1" = "pose" ]
    then
        echo "Converting pose"
        rostopic echo -b $2 -p /LeftIMU > "$3/$bagname/LeftIMU.csv" &
        rostopic echo -b $2 -p /RightIMU > "$3/$bagname/RightIMU.csv" &
        wait
        echo "All Conversion Complete"
    elif [ "$1" = "resource" ]
    then
        topics=$(rosbag info $2 | grep "resource")
        IFS=': ' list=($topics)
        for i in "${list[@]}"
        do
            if [[ $i == *"resource"* ]]; then
                if [[ $i != *"icarus_rover_v2/resource"* ]]; then
                    v=${i#/}                    
                    v="${v//"/"/"-"}" 
                    
                    rostopic echo -b $2 -p $i > "$3/$bagname/$v.csv" &
                fi
            fi

        done
	    wait
	    echo "All Conversion Complete"
    elif [ "$1" = "time" ]
    then
        topics=$(rosbag info $2 | grep "timesyncinfo")
        IFS=': ' list=($topics)
        for i in "${list[@]}"
        do
            if [[ $i == *"timesyncinfo"* ]]; then
                if [[ $i != *"icarus_rover_v2/timesyncinfo"* ]]; then
                    v=${i#/}                    
                    v="${v//"/"/"-"}" 
                    rostopic echo -b $2 -p $i > "$3/$bagname/$v.csv" &
                fi
            fi

        done
	    wait
	    echo "All Conversion Complete"
    fi

}
while getopts ":?hm:b:o:" options; do
    case $options in
        b) bagfile=${OPTARG} ;;
        m) mode=${OPTARG} ;;
        o) ouputdir=${OPTARG} ;;
        h) print_usage ;;
        ?) print_usage ;;
        *) print_usage ;;
    esac

    
done
convert $mode $bagfile $ouputdir

